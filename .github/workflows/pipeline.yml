name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:    
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:    
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4   
      - uses: superfly/flyctl-actions/setup-flyctl@master      
        with: 
          node-version: '20'

      # Build the app
      - name: Install dependencies        
        run: npm ci
        id: Install_dependencies
      - name: Check style        
        run: npm run eslint
        id: Check_style
      - name: Build
        run: npm run build
        id: Build

      # Run unit tests
      - name: Unit tests
        run: npm run test
        id: Unit_tests

      # Run e2e tests
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        id: Install_Playwright_browsers
      - name: Run E2E tests
        run: npm run test:e2e
        id: Run_e2e_tests
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
          
      # Production deployment             
      - name: Deploy the app
        id: Deploy_the_app
        if: |
          github.event_name == 'push' && 
          !contains(join(github.event.commits.*.message, ' '), '#skip') && 
          !contains(join(github.event.commits.*.message, ' '), '#SKIP') && 
          !contains(join(github.event.commits.*.message, ' '), '#Skip') 
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      # Discord hooks for failure notifications
      - name: The build has failed
        uses: rjstone/discord-webhook-notify@v1
        if: ${{ failure() }}
        with:
          severity: error
          details: | 
            Build failed
            [Details](${{ github.server_url }}/{{ github.repository }}/actions/runs/${{ github.run_id }}).      
            Pull Request: ${{ github.event.pull_request.html_url || 'N/A' }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}          
        

  tag_release:
    # Check out the code and bump the version tag
    needs: [simple_deployment_pipeline]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4    
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
        fetch-depth: '0'      
    - name: Bump version and push tag
      id: tag_version
      uses: anothrNick/github-tag-action@1.64.0
      with: 
        default_bump: 'minor'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Discord hooks for success notifications - get the new tag into the message
    - name: The build has succeeded
      uses: stegzilla/discord-notify@v2
      if: ${{ success() }}
      with:
        title: Build succesful
        message: |
          Build succesful.
          Version Tag: ${{ steps.tag_version.outputs.new_tag }}  
          Commit URL:** ${{ github.event.head_commit.url }}
        webhook_url: ${{ secrets.DISCORD_WEBHOOK }}