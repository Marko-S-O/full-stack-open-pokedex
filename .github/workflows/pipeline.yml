name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:    
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:    
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4   
      - uses: superfly/flyctl-actions/setup-flyctl@master      
        with: 
          node-version: '20'

      # Build the app
      - name: Install dependencies        
        run: npm ci
      - name: Check style        
        run: npm run eslint
      - name: Build
        run: npm run build

      # Run unit tests
      - name: Test
        run: npm run test

      # Run e2e tests
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
          
      # Production deployment
      - name: Deploy the app
        if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') && !contains(toJson(github.event.commits.*.message), '#SKIP') && !contains(toJson(github.event.commits.*.message), '#Skip') }}
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  tag_release:
    needs: [simple_deployment_pipeline]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(toJson(github.event.commits.*.message), '#skip') && !contains(toJson(github.event.commits.*.message), '#SKIP') && !contains(toJson(github.event.commits.*.message), '#Skip') }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4    
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
        fetch-depth: '0'      
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0
      with: 
        default_bump: 'minor'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  print_commits:
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v4
    - name: github context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: commits
      env:
        COMMITS: ${{ toJson(github.event.commits) }}
      run: echo "$COMMITS"
    - name: commit messages
      env:
        COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
      run: echo "$COMMIT_MESSAGES"
